1.what is constant
constant is a fixed value which is stored in storage.
2.type
 2.1 integer
 such as 1,-1,10000.which is represented by complement code in computer.
 PS:how data is stored in storage?
    storage only could express 1 and 0.we use multiple place to express human language.
    such as :1    ~~  0001
             2    ~~  0010
             or
             1  ~~ 00000001
             2  ~~ 00000010
    how many unmber can be represented?
    2*(number of place),8 p=1byte, which can indicate 256 number.
    integer use 4 bytes to store the information.
    what is complement?
    /*这就要从计算机如何计算加减法说起。
    前面说到正整数地表示可以从00000000表示0开始，一直到11111111表示255；
    但是表示负数呢？一般的方式是将首位表示成符号位，0代表负，1代表正。
    10000000表示1，到11111110表示127;
    另外00000000表示-1，一直到01111110表示-127。多了两个怎么办？表示0吗？还是1个表示0，另一个表示128呢？
    
   除了表示以外，更加重要的是计算。
   上面的表示在计算上非常的不方便，有符号的并不能直接相加，而只有补码的可以直接加。而且可以将符号位一起运算，非常的方便。
   这种计算方式也是构造出来的，具体的计算方式如下:
   
   原码
   原码就是符号位加上真值的绝对值, 即用第一位表示符号, 其余位表示值. 比如如果是8位二进制:
      [+1]原 = 0000 0001
      [-1]原 = 1000 0001
   反码的表示方法是：
    正数的反码是其本身
    负数的反码是在其原码的基础上, 符号位不变，其余各个位取反.
    [+1] = [00000001]原 = [00000001]反
    [-1] = [10000001]原 = [11111110]反
   补码的表示方法是:
     正数的补码就是其本身
     负数的补码是在其原码的基础上, 符号位不变, 其余各位取反, 最后+1. (即在反码的基础上+1)
     [+1] = [00000001]原 = [00000001]反 = [00000001]补
     [-1] = [10000001]原 = [11111110]反 = [11111111]补
  */
    
    Expression in C:
    int main()
    int i=1;  //创造一个4字节的空间还是从规划的空间中取呢？不清楚，并且定义为i，里面存储的数据定义为整数（实际的还要待后续学习）
    int i,j,k;
    .....
    
    
 2.2 float
   
 2.3 letter
 
 2.4 string
 
 3.shift of type
 
 
