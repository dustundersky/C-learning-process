数据是计算机程序加工的原料，应用程序能处理各种各样的数据，包括数值数据和非数值数据。

数值数据是一些整数、实数或复数；非数值数据包括字符、文字、图形、图像、语音等。

数据在结构上一般表示为：

数据元素（）  //为基本的数据单位，通常作为一个整体进行考虑
{
   数据项1；  //不可分割的，具有意义的最小数据单位。比如姓名，学号等叫做初等项
   数据项2（）
   {
   }          ； //比如说成绩，下面就包括数学语文什么的。这样的叫做组合项。
   ....
   ....
}


数据的基本结构有四种

1）集合结构
if

else

2)线性结构
满足下面这种结构的就是：表，栈，队，串
D1   D11
D2   D22
D3   D33

3）树形结构

D1
{
  D2
  {
    D5
  }
  
  D3
  {
    D6
  }
}

4）图状结构(网状结构相互联系）
？？？


上面的结构显示一个数据结构需要表示两个量：数据元素本身，结构关系
Data_Structure=(D,R)

一个实际的例子如下：
DS=（D,R）D={ a, b, c, d, e, f, g }R={ <a, b>,<a, c>,<a, d>,<c, e>,<c, f>,<d, g> }
D里面显示总共有7个元素，后面的大于，小于表示什么呢?那是括号。。。 <a,b> 这样表示一组关系，最后联系起来就是树状结构



除了数据结构的语言表示以外，同样重要的是这个结构是如何 存储在计算机里面的。这个称为存储结构。
1）顺序存储。逻辑上相邻的元素也存储在物理位置相邻的存储单元。一般借助设计语言中的数组实现。
2）链式存储。通过指针来实现。也就是地址之间的联系。

除了顺序存储方法和链式存储方法外，有时为了查找方便还采用索引存储方法和散列表（Hash）存储方法。


也就是说，数据结构就是研究数据表示，以及如何物理实现的科学。


